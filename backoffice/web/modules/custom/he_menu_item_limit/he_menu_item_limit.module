<?php

/**
 * @file
 * Menu item limit enables the limitation of items per menu.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\menu_ui\MenuForm;
use Symfony\Component\HttpFoundation\RedirectResponse;

/**
 * Implements hook_form_alter().
 */
function he_menu_item_limit_form_alter(&$form, FormStateInterface &$form_state, $form_id) {
  switch ($form_id) {
    case 'menu_edit_form':
      // Get current user.
      $user = Drupal::currentUser();

      // Check for permission.
      if ($user->hasPermission('administer menu item limit')) {
        // Extend menu_edit_menu with the limit form.
        $form['he_menu_item_limit'] = he_menu_item_limit_config_menu($form, $form_state->getBuildInfo()['callback_object']);
        $form['#validate'][] = 'he_menu_item_limit_config_menu_validate';
        array_unshift($form['actions']['submit']['#submit'], 'he_menu_item_limit_config_menu_submit');
      }
      break;

    case 'menu_link_content_main_form':
      // Add a validation to form menu_edit_item.
      array_unshift($form['#validate'], 'he_menu_item_limit_menu_validate');
      break;

    default:
      break;
  }
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function he_menu_item_limit_menu_link_content_presave(EntityInterface $entity) {
  $has_parent = $entity->parent->value;

  if ($has_parent) {
    return;
  }

  // Ok if it has no parent before save.
  if (!$entity->isNew()) {
    $had_parent = $entity->original->parent->value;

    if (!$had_parent) {
      return;
    }
  }

  // Get menu configuration limit.
  $menu_name = $entity->menu_name->value;
  $config = Drupal::service('config.factory')->getEditable('he_menu_item_limit.settings');
  $limit = empty($config->get($menu_name)) ? 0 : $config->get($menu_name);

  // If the limit is set to unlimited, validate the form.
  if ($limit == 0) {
    return;
  }
  // Get the current amount of items and check if the count is within limits.
  else {
    $item_count = _he_menu_item_limitation_get_item_count($menu_name);

    if ($item_count >= $limit) {
      $response = new RedirectResponse(Drupal::request()->getRequestUri());
      $response->send();

      $message = t('The chosen menu already has the maximum number of level 1 items.');
      $messenger = Drupal::messenger();
      $messenger->addMessage($message, $messenger::TYPE_ERROR);
      Drupal::logger('he_menu_item_limit')->error($message);
      exit;
    }
  }
}

/**
 * Add a form element to configure the item limitation of a menu.
 *
 * @param array $form
 *   The current menu edit form.
 * @param \Drupal\menu_ui\MenuForm $menu_form
 *   The current menu edit form.
 *
 * @return array
 *   The prefilled form element.
 */
function he_menu_item_limit_config_menu(array $form, MenuForm $menu_form) {
  $menu_name = empty($menu_form->getEntity()->id()) ? 'new' : $menu_form->getEntity()->id();
  // Try to get the current limit of the menu.
  $config = Drupal::service('config.factory')->getEditable('he_menu_item_limit.settings');
  $limit = empty($config->get($menu_name)) ? 0 : $config->get($menu_name);
  $config_item = [
    '#type' => 'textfield',
    '#description' => t('Set the amount of level 1 items allowed in this menu. Set 0 to allow unlimited items.'),
    '#title' => t('Level 1 item limitation'),
    '#default_value' => $limit,
  ];
  return $config_item;
}

/**
 * Validate the user input for the item limitation.
 *
 * @param array $form
 *   The current menu edit form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The current state of the menu edit form.
 */
function he_menu_item_limit_config_menu_validate(array $form, FormStateInterface &$form_state) {
  // Check if the entered limit is set to a value of 0 or higher.
  $limit = $form_state->getValue('he_menu_item_limit');
  if ((!is_numeric($limit)) || ($limit < 0)) {
    $form_state->setErrorByName('he_menu_item_limit', t('The level 1 item limitation has to be set to 0 or higher.'));
  }
}

/**
 * Set the new value for the item limitation of the menu.
 *
 * @param array $form
 *   The current menu edit form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The current state of the menu edit form.
 */
function he_menu_item_limit_config_menu_submit(array $form, FormStateInterface &$form_state) {
  // Set the limit for the menu.
  $limit = $form_state->getValue('he_menu_item_limit');
  $menu_name = $form_state->getValue('id');
  $config = Drupal::service('config.factory')->getEditable('he_menu_item_limit.settings');
  $config->set($menu_name, $limit);
  $config->save();
}

/**
 * Validate an item within limit settings.
 *
 * @param array $form
 *   The current menu item edit form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The current state of the menu item edit form.
 *
 * @return bool
 *   TRUE when the item can be created and the limit hasn't been reached.
 */
function he_menu_item_limit_menu_validate(array $form, FormStateInterface &$form_state) {
  $menu_parent_value = $form_state->getValue('menu_parent');

  if ($menu_parent_value !== 'main:') {
    return TRUE;
  }

  // Ok if it has no parent before save.
  $entity = $form_state->getformObject()->getEntity();
  if (!$entity->isNew()) {
    $had_parent = $entity->parent->value;

    if (!$had_parent) {
      return TRUE;
    }
  }

  $menu_name = $form_state->getBuildInfo()['callback_object']->getEntity()->menu_name->value;
  $config = Drupal::service('config.factory')->getEditable('he_menu_item_limit.settings');
  $limit = empty($config->get($menu_name)) ? 0 : $config->get($menu_name);

  // If the limit is set to unlimited, validate the form.
  if ($limit == 0) {
    return TRUE;
  }
  // Get the current amount of items and check if the count is within limits.
  else {
    $item_count = _he_menu_item_limitation_get_item_count($menu_name);

    if ($item_count >= $limit) {
      $message = t('The chosen menu already has the maximum number of level 1 items.');
      $form_state->setErrorByName('menu_parent', $message);
      Drupal::logger('he_menu_item_limit')->error($message);
      return FALSE;
    }
  }
}

/**
 * This function takes a menu name and returns the number of menu items in it.
 *
 * @param string $menu_name
 *   The name of the menu.
 *
 * @return int
 *   The amount of items in the menu.
 */
function _he_menu_item_limitation_get_item_count($menu_name) {
  $menu_manager = Drupal::service('menu.link_tree');
  $parameters = $menu_manager->getCurrentRouteMenuTreeParameters($menu_name);

  // Only check menu item root level.
  $parameters->setMaxDepth(1);

  // Load the tree based on this set of parameters.
  $tree = $menu_manager->load($menu_name, $parameters);
  if (!empty($tree)) {
    return count($tree);
  }
  else {
    return 0;
  }
}
