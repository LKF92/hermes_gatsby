test_phpcs:
  image: willhallonline/drupal-phpcs
  script:
    - composer config --global vendor-dir /root/.composer/vendor
    - composer config --global bin-dir /root/.composer/vendor/bin
    - composer global update squizlabs/php_codesniffer
    - composer global update drupal/coder
    - phpcs --config-set installed_paths /root/.composer/vendor/drupal/coder/coder_sniffer/ \
      && phpcs --config-set default_standard Drupal,DrupalPractice
    - phpcs --standard=Drupal --extensions=php,module,inc,install,test,profile,theme,css,info,txt,md backoffice/web/modules/custom/
  only:
    refs:
      - merge_requests
    changes:
      - backoffice/**/*


test_prettier:
  image: node:12
  script:
    - npm install --global prettier
    - prettier --check "frontoffice/src/**/*.js"
  only:
    refs:
      - merge_requests
    changes:
      - frontoffice/**/*


variables:
  BACKOFFICE_REPOSITORY_URL: 594067985087.dkr.ecr.eu-west-1.amazonaws.com/hec-bo
  FRONTOFFICE_REPOSITORY_URL: 594067985087.dkr.ecr.eu-west-1.amazonaws.com/h7-poc_livrepreview
  SSR_REPOSITORY_URL: 594067985087.dkr.ecr.eu-west-1.amazonaws.com/hec-front
  DEV_PRISM_REPOSITORY_URL: 594067985087.dkr.ecr.eu-west-1.amazonaws.com/hec-prism
  REGION: eu-west-1
  CLUSTER_NAME: hermes-hecate-dev
  DOCKER_DRIVER: overlay2


deploy_bitbucket_ppr:
  image: sombralibre/gitclient
  script:
    - apk --update add openssh-client
    - cp -R ./.gitlab-ci/deploy-keys/ ~/.ssh/
    - cat ~/.ssh/id_rsa.pub
    - chmod 600 ~/.ssh/id_rsa
    - chmod 644 ~/.ssh/known_hosts
    - git remote add bitbucket ssh://git@src.tools.hermes.com:7999/hecbo/hecatebo.git
    - cat ~/.ssh/known_hosts
    - git checkout preprod
    - git push bitbucket preprod
  only:
    - preprod
  except:
    - schedules

deploy_bitbucket_master:
  image: sombralibre/gitclient
  script:
    - apk --update add openssh-client
    - cp -R ./.gitlab-ci/deploy-keys/ ~/.ssh/
    - cat ~/.ssh/id_rsa.pub
    - chmod 600 ~/.ssh/id_rsa
    - chmod 644 ~/.ssh/known_hosts
    - git remote add bitbucket ssh://git@src.tools.hermes.com:7999/hecbo/hecatebo.git
    - cat ~/.ssh/known_hosts
    - git checkout master
    - git push bitbucket master
  only:
    - master
  except:
    - schedules


image: docker:19.03.10
services:
  - docker:19.03.0-dind

.aws-requirements: &aws-requirements
  - apk add --no-cache curl jq python py-pip
  - pip install awscli
  - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
  - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
  - echo "AWS region > ${REGION}"
  - IMAGE_TAG="$(echo $CI_COMMIT_SHA | head -c 8)"

##           ##
# Frontoffice #
##           ##
build_frontoffice_preartifact:
  stage: .pre
  image: node:12
  script:
    - cp $CI_PROJECT_DIR/iaac/build/override/develop/frontoffice/.env.development frontoffice/.env.development
    - cp $CI_PROJECT_DIR/iaac/build/override/develop/frontoffice/.env.production frontoffice/.env.production
    - cd frontoffice
    - yarn install
    - cd $CI_PROJECT_DIR
    - tar -czf $CI_PROJECT_DIR/pre-artifact-front.tar.gz frontoffice/
  artifacts:
    paths:
      - pre-artifact-front.tar.gz
  only:
    refs:
      - build_develop
    changes:
      - frontoffice/**/*
  except:
    - schedules

##           ##
# Backoffice #
##           ##
build_backoffice_artifact:
  stage: .pre
  image: composer:1.8.6
  script:
    - cd backoffice/
    - composer install --ignore-platform-reqs
    - cd $CI_PROJECT_DIR
    - pwd
    - tar -czf $CI_PROJECT_DIR/artifact-back.tar.gz backoffice/
  artifacts:
    paths:
      - artifact-back.tar.gz
  only:
    refs:
      - build_develop
    changes:
      - backoffice/**/*
  except:
    - schedules

build_backoffice_ecrimage:
  stage: build
  dependencies:
    - build_backoffice_artifact
  before_script:
    - *aws-requirements
  script:
    - eval $(aws ecr get-login --no-include-email --region "${REGION}"| sed 's|https://||')
    - aws ecr untag-resource --resource-arn arn:aws:ecr:eu-west-1:594067985087:repository/hec-bo --tag-keys latest --region "${REGION}"
    - cd $CI_PROJECT_DIR/iaac/build/
    - tar -xzf $CI_PROJECT_DIR/artifact-back.tar.gz
    - mv backoffice codebase
    - echo "Building image..."
    - docker build -t $BACKOFFICE_REPOSITORY_URL:latest  -f ./Dockerfile.backoffice .
    - echo "Tagging image..."
    - docker tag $BACKOFFICE_REPOSITORY_URL:latest $BACKOFFICE_REPOSITORY_URL:$IMAGE_TAG
    - echo "Pushing image..."
    - docker push $BACKOFFICE_REPOSITORY_URL:latest
    - docker push $BACKOFFICE_REPOSITORY_URL:$IMAGE_TAG
  only:
    refs:
      - build_develop
    changes:
      - backoffice/**/*
  except:
    - schedules


deploy_backoffice:
  stage: deploy
  before_script:
    - *aws-requirements
  dependencies:
    - build_backoffice_ecrimage
  script:
    - echo $BACKOFFICE_REPOSITORY_URL:$IMAGE_TAG
    - TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition "hec-bo" --region "eu-west-1")
    - NEW_CONTAINER_DEFINITION=$(echo $TASK_DEFINITION | python $CI_PROJECT_DIR/iaac/deploy/update_task_definition_image.py $BACKOFFICE_REPOSITORY_URL:$IMAGE_TAG)
    - TASK_VOLUMES=$(echo $TASK_DEFINITION | python $CI_PROJECT_DIR/iaac/deploy/get_task_volume.py)
    - echo "-- New Container Definition"
    - echo $NEW_CONTAINER_DEFINITION
    - echo "-- New task Volumes"
    - echo $TASK_VOLUMES
    - echo "Registering new container definition..."
    - aws ecs register-task-definition --region "${REGION}" --family "hec-bo" --container-definitions "${NEW_CONTAINER_DEFINITION}"  --volumes "${TASK_VOLUMES}"
    - echo "Updating the service..."
    - aws ecs update-service --region "${REGION}" --cluster "${CLUSTER_NAME}" --service "hecate_backoffice"  --task-definition "hec-bo"
  only:
    refs:
      - build_develop
    changes:
      - backoffice/**/*
  except:
    - schedules

postdeploy_backoffice:
  stage: .post
  image: dropteam/drupal-php:7.2-apache
  dependencies:
    - build_backoffice_artifact
    - deploy_backoffice
  script:
    - cd /var/www/html
    - tar -xzf $CI_PROJECT_DIR/artifact-back.tar.gz
    # TO FIX !!! NEED TO WORK
    #- rsync -Pax $CI_PROJECT_DIR/iaac/build/override/develop/ /var/www/html/backoffice
    - cp $CI_PROJECT_DIR/iaac/build/override/develop/web/sites/default/settings.local.php /var/www/html/backoffice/web/sites/default/settings.local.php
    - cd /var/www/html/backoffice/web
    - ../vendor/bin/drush cr -y
    - ../vendor/bin/drush updb
    - ../vendor/bin/drush cim -y
    - ../vendor/bin/drush cr -y
  only:
    refs:
      - build_develop
    changes:
      - backoffice/**/*
  except:
    - schedules

##
# Prism
##
build_prism:
  stage: build
  before_script:
    - *aws-requirements
  script:
    - eval $(aws ecr get-login --no-include-email --region "${REGION}"| sed 's|https://||')
    - aws ecr untag-resource --resource-arn arn:aws:ecr:eu-west-1:594067985087:repository/hec-prism --tag-keys latest --region "${REGION}"
    - cd $CI_PROJECT_DIR/iaac/
    - ls -lah
    - echo "Building image..."
    - docker build -t $DEV_PRISM_REPOSITORY_URL:latest  -f ./build/Dockerfile.prism .
    - echo "Tagging image..."
    - docker tag $DEV_PRISM_REPOSITORY_URL:latest $DEV_PRISM_REPOSITORY_URL:$IMAGE_TAG
    - echo "Pushing image..."
    - docker push $DEV_PRISM_REPOSITORY_URL:latest
    - docker push $DEV_PRISM_REPOSITORY_URL:$IMAGE_TAG
  only:
    - build_develop
  except:
    - schedules

##
# SSR
##
build_frontoffice_ecrimage:
  stage: build
  dependencies:
    - build_frontoffice_preartifact
  before_script:
    - *aws-requirements
  script:
    - eval $(aws ecr get-login --no-include-email --region "${REGION}"| sed 's|https://||')
    - IMAGE_TAG="$(echo $CI_COMMIT_SHA | head -c 8)"
    - aws ecr untag-resource --resource-arn arn:aws:ecr:eu-west-1:594067985087:repository/hec-front --tag-keys latest --region "${REGION}"
    - cd $CI_PROJECT_DIR/iaac/build/
    - mkdir codebase
    - tar -xzf $CI_PROJECT_DIR/pre-artifact-front.tar.gz -C codebase
    - ls -lah codebase
    - echo "Building image..."
    - cd $CI_PROJECT_DIR/iaac/build/
    - docker build -t $SSR_REPOSITORY_URL:latest  -f ./Dockerfile.ssr .
    - echo "Tagging image..."
    - docker tag $SSR_REPOSITORY_URL:latest $SSR_REPOSITORY_URL:$IMAGE_TAG
    - echo "Pushing image..."
    - docker push $SSR_REPOSITORY_URL:latest
    - docker push $SSR_REPOSITORY_URL:$IMAGE_TAG
  only:
    refs:
      - build_develop
    changes:
      - frontoffice/**/*

  except:
    - schedules

deploy_frontofficessr:
  stage: deploy
  before_script:
    - *aws-requirements
  dependencies:
    - build_frontoffice_ecrimage
  script:
    - echo $SSR_REPOSITORY_URL:latest
    - TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition "hecate-ssr" --region "eu-west-1")
    - NEW_CONTAINER_DEFINITION=$(echo $TASK_DEFINITION | python $CI_PROJECT_DIR/iaac/deploy/update_task_definition_image.py $SSR_REPOSITORY_URL:latest)
    - echo "-- New Container Definition"
    - echo "$NEW_CONTAINER_DEFINITION"
    - echo "Registering new container definition..."
    - aws ecs register-task-definition --region "${REGION}" --family "hecate-ssr" --container-definitions "${NEW_CONTAINER_DEFINITION}"
    - echo "Updating the service..."
    - aws ecs update-service --region "${REGION}" --cluster "${CLUSTER_NAME}" --service "hecate-ssr-svc"  --task-definition "hecate-ssr"
  only:
    refs:
      - build_develop
    changes:
      - frontoffice/**/*

  except:
    - schedules

deploy_prism:
  stage: deploy
  before_script:
    - *aws-requirements
  dependencies:
    - build_prism
  script:
    - echo $DEV_PRISM_REPOSITORY_URL:$IMAGE_TAG
    - TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition "hec-prism" --region "eu-west-1")
    - NEW_CONTAINER_DEFINITION=$(echo $TASK_DEFINITION | python $CI_PROJECT_DIR/iaac/deploy/update_task_definition_image.py $DEV_PRISM_REPOSITORY_URL:$IMAGE_TAG)
    - echo "-- New Container Definition"
    - echo "$NEW_CONTAINER_DEFINITION"
    - echo "Registering new container definition..."
    - aws ecs register-task-definition --region "${REGION}" --family "hec-prism" --container-definitions "${NEW_CONTAINER_DEFINITION}"
    - echo "Updating the service..."
    - aws ecs update-service --region "${REGION}" --cluster "${CLUSTER_NAME}" --service "hecate_prism"  --task-definition "hec-prism"
  only:
    refs:
      - build_develop
    changes:
      - frontoffice/**/*

  except:
    - schedules

##
# Front to S3
##
build_front_s3:
  stage: build
  image: node:12
  dependencies:
    - build_frontoffice_preartifact
  script:
    - npm install -g gatsby-cli
    - mkdir /app
    - tar -xzf $CI_PROJECT_DIR/pre-artifact-front.tar.gz -C /app
    - cd /app/frontoffice/
    - ls -lah
    - PUBLICATION_DATE= date +"%s" 
    - echo  PUBLICATION_DATE
    - printenv
    - gatsby build
    - mv public/ front_s3_public/
    - ls -lah
    - tar -czf $CI_PROJECT_DIR/artifact-front-s3.tar.gz front_s3_public/
  artifacts:
    paths:
      - artifact-front-s3.tar.gz
  only:
    refs:
      - build_develop
    changes:
      - frontoffice/**/*

  except:
    - schedules

deploy_front_s3:
  stage: deploy
  image: mikesir87/aws-cli
  dependencies:
    - build_front_s3
  script:
    - ls -alh
    - mkdir /app
    - tar -xzf $CI_PROJECT_DIR/artifact-front-s3.tar.gz -C /app
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws s3 rm s3://hec-dev-front/ --recursive
    - aws s3 cp /app/front_s3_public/ s3://hec-dev-front/ --recursive --acl public-read
    - aws cloudfront create-invalidation --distribution-id E39H3KO26EIKDG --paths "/*"
    #- aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT-ID} --paths "/*"
  only:
    refs:
      - build_develop
    changes:
      - frontoffice/**/*

  except:
    - schedules
